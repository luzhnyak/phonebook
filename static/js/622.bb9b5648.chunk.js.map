{"version":3,"file":"static/js/622.bb9b5648.chunk.js","mappings":"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","sources":["components/Contacts/Contact.tsx","components/Filter/Filter.tsx","components/Contacts/Empty.tsx","components/Contacts/ContactsList.tsx","components/Contacts/ContactForm.tsx","components/Modal/Modal.tsx","components/AppBar/AddFab.tsx","pages/ContactsPages/ContactsPages.tsx"],"sourcesContent":["import { useDeleteContactMutation } from \"../../redux/api\";\r\n\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport { Link } from \"@mui/material\";\r\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\r\nimport PhoneIcon from \"@mui/icons-material/Phone\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\ntype Props = {\r\n  id?: string;\r\n  name: string;\r\n  phone: string;\r\n  email?: string;\r\n  avatarURL?: string;\r\n};\r\n\r\nexport const Contact: React.FC<Props> = ({\r\n  id,\r\n  name,\r\n  phone,\r\n  email,\r\n  avatarURL,\r\n}) => {\r\n  const [deleteContact, deleteInfo] = useDeleteContactMutation();\r\n  const handleDelete = () => {\r\n    if (id) {\r\n      deleteContact(+id);\r\n    }\r\n  };\r\n\r\n  function getRandomHexColor() {\r\n    return `#${Math.floor(Math.random() * 16777215)\r\n      .toString(16)\r\n      .padStart(6, \"0\")}`;\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      // components={Paper}\r\n      secondaryAction={\r\n        <LoadingButton\r\n          // edge=\"end\"\r\n          aria-label=\"delete\"\r\n          onClick={handleDelete}\r\n          title={`Delete ${name}`}\r\n          loading={deleteInfo.isLoading}\r\n          // loadingPosition=\"end\"\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n        >\r\n          <DeleteIcon />\r\n        </LoadingButton>\r\n      }\r\n      sx={{ borderBottom: \"1px solid lightGreen\" }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar sx={{ backgroundColor: getRandomHexColor() }} src={avatarURL}>\r\n          <PersonIcon />\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n      <Stack>\r\n        <ListItemText primary={name}></ListItemText>\r\n        <Stack\r\n          direction={{ xs: \"column\", sm: \"row\" }}\r\n          spacing={{ xs: 0, sm: 2 }}\r\n          divider={<Divider orientation=\"vertical\" flexItem />}\r\n        >\r\n          <Link href={\"tel:\" + phone} underline=\"hover\" sx={{ color: \"green\" }}>\r\n            <Stack direction=\"row\" spacing={1}>\r\n              <PhoneIcon fontSize=\"small\" />\r\n              <span>{phone}</span>\r\n            </Stack>\r\n          </Link>\r\n          {email && (\r\n            <Link\r\n              href={\"mailto:\" + email}\r\n              underline=\"hover\"\r\n              sx={{ color: \"green\" }}\r\n            >\r\n              <Stack direction=\"row\" spacing={1}>\r\n                <MailOutlineIcon fontSize=\"small\" />\r\n                <span>{email}</span>\r\n              </Stack>\r\n            </Link>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n    </ListItem>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/filterSlice\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { Box, TextField } from \"@mui/material\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = (event: any) => {\n    return dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box m={1}>\n      <TextField\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        label=\"Filter\"\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        value={filter}\n        onChange={handleFilterChange}\n        color=\"success\"\n      />\n    </Box>\n  );\n};\n","import { Box, Typography } from \"@mui/material\";\n\nconst Empty = () => {\n  return (\n    <Box sx={{ textAlign: \"center\", marginTop: \"24px\", color: \"green\" }}>\n      <Typography variant=\"h6\">The contact list is empty! </Typography>\n    </Box>\n  );\n};\n\nexport default Empty;\n","import { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { Contact } from \"./Contact\";\n// import { Ul } from './ContactsList.styled';\nimport { useGetContactsQuery } from \"../../redux/api\";\n\nimport { styled } from \"@mui/material/styles\";\n// import Box from '@mui/material/Box';\nimport List from \"@mui/material/List\";\nimport { Filter } from \"../Filter/Filter\";\nimport { Loader } from \"../Loader\";\nimport { useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport Empty from \"./Empty\";\nimport { IContact } from \"../../types\";\n\nconst getFilteredContacts = (contacts: IContact[], filter: string) => {\n  return contacts?.filter((contact: IContact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactsList = () => {\n  const { data: contacts, isLoading, error } = useGetContactsQuery(null);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  // Виводимо помилку\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error contacts\");\n    }\n  }, [error]);\n\n  const Demo = styled(\"div\")(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && contacts?.length > 1 && <Filter />}\n      {!isLoading && contacts?.length < 1 && <Empty />}\n      {!isLoading && contacts && (\n        <Demo>\n          <List component=\"ul\">\n            {filteredContacts?.map((contact: IContact) => (\n              <Contact\n                id={contact._id}\n                key={contact._id}\n                name={contact.name}\n                phone={contact.phone}\n                email={contact.email}\n                avatarURL={contact.avatarURL}\n              />\n            ))}\n          </List>\n        </Demo>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport toast from \"react-hot-toast\";\n\nimport SaveIco from \"@mui/icons-material/Save\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Box, TextField } from \"@mui/material\";\n\nimport { setOpenModal } from \"../../redux/modalSlice\";\nimport { useAddContactMutation, useGetContactsQuery } from \"../../redux/api\";\nimport { Formik } from \"formik\";\nimport { IContact } from \"../../types\";\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery(null);\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const dispatch = useDispatch();\n\n  const isNameHas = (name: string) => {\n    return contacts.some((contact: IContact) => contact.name === name);\n  };\n\n  const handleSubmit = (contact: IContact) => {\n    const { name, phone, email } = contact;\n\n    if (isNameHas(name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      addContact({ name, phone, email });\n      dispatch(setOpenModal(false));\n    } catch (error) {\n      toast.error(`Some error.`);\n    }\n  };\n\n  return (\n    <Box m={1}>\n      <Formik\n        initialValues={{ name: \"\", phone: \"\", email: \"\" }}\n        onSubmit={(values) => {\n          handleSubmit(values);\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name || \"\"}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Phone\"\n              type=\"text\"\n              name=\"phone\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              // pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              required\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.phone || \"\"}\n            />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Email\"\n              type=\"text\"\n              name=\"email\"\n              title=\"Email\"\n              // pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              required\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email || \"\"}\n            />\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginTop: \"16px\",\n              }}\n            >\n              <LoadingButton\n                variant=\"contained\"\n                // margin=\"normal\"\n                type=\"submit\"\n                color=\"success\"\n                loading={isLoading}\n                loadingPosition=\"end\"\n                endIcon={<SaveIco />}\n              >\n                Add contact\n              </LoadingButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n","import { Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { ContactForm } from \"../Contacts/ContactForm\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setOpenModal } from \"../../redux/modalSlice\";\nimport { getOpenModal } from \"../../redux/selectors\";\n\nconst Modal = () => {\n  const openModal = useSelector(getOpenModal);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(setOpenModal(false));\n  };\n\n  return (\n    <div>\n      <Dialog open={openModal} onClose={handleClose}>\n        <DialogTitle>Add contact</DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogContent>\n          <ContactForm />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { Fab } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { setOpenModal } from \"../../redux/modalSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst AddFab = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(setOpenModal(true));\n  };\n\n  return (\n    <Fab\n      sx={{\n        position: \"absolute\",\n        display: { xs: \"flex\", md: \"none\" },\n        bottom: 16,\n        right: 16,\n        color: \"common.white\",\n        bgcolor: \"green\",\n        \"&:hover\": {\n          bgcolor: \"darkGreen\",\n        },\n      }}\n      aria-label=\"Add contacts\"\n      color=\"success\"\n      onClick={handleOpenModal}\n    >\n      <AddIcon />\n    </Fab>\n  );\n};\n\nexport default AddFab;\n","import { useSelector } from \"react-redux\";\nimport { getUser } from \"../../redux/selectors\";\n\nimport { ContactsList } from \"../../components/Contacts/ContactsList\";\nimport Modal from \"../../components/Modal/Modal\";\nimport AddFab from \"../../components/AppBar/AddFab\";\n\nconst ContactsPage = () => {\n  const { isLoggedIn } = useSelector(getUser);\n\n  return (\n    <>\n      {isLoggedIn && <ContactsList />}\n      <Modal />\n      <AddFab />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Contact","_ref","id","name","phone","email","avatarURL","deleteContact","deleteInfo","useDeleteContactMutation","_jsxs","ListItem","secondaryAction","_jsx","LoadingButton","onClick","handleDelete","title","concat","loading","isLoading","variant","color","children","DeleteIcon","sx","borderBottom","ListItemAvatar","Avatar","backgroundColor","Math","floor","random","toString","padStart","src","PersonIcon","Stack","ListItemText","primary","direction","xs","sm","spacing","divider","Divider","orientation","flexItem","Link","href","underline","PhoneIcon","fontSize","MailOutlineIcon","Filter","dispatch","useDispatch","filter","useSelector","getFilter","Box","m","TextField","fullWidth","margin","label","type","placeholder","value","onChange","event","setFilter","target","Empty","textAlign","marginTop","Typography","ContactsList","data","contacts","error","useGetContactsQuery","filteredContacts","getFilteredContacts","contact","toLowerCase","includes","useEffect","toast","Demo","styled","theme","palette","background","paper","_Fragment","Loader","length","List","component","map","_id","ContactForm","addContact","useAddContactMutation","handleSubmit","some","isNameHas","setOpenModal","Formik","initialValues","onSubmit","values","handleChange","handleBlur","required","onBlur","display","justifyContent","loadingPosition","endIcon","SaveIco","Modal","openModal","getOpenModal","handleClose","Dialog","open","onClose","DialogTitle","IconButton","position","right","top","grey","CloseIcon","DialogContent","AddFab","Fab","md","bottom","bgcolor","handleOpenModal","AddIcon","ContactsPage","isLoggedIn","getUser"],"sourceRoot":""}
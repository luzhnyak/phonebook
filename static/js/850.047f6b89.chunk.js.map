{"version":3,"file":"static/js/850.047f6b89.chunk.js","mappings":"2PAUA,MAsHA,EAtHsBA,KACpB,MAAOC,GAAS,UAAEC,KAAeC,EAAAA,EAAAA,MAE3BC,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,EAAG,EAAEC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,QAAQ,KACRC,UAAU,KACVC,GAAI,CAAEC,UAAW,OAAQC,MAAO,SAAUP,SAC3C,cAGDC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CACLC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAWC,IACT,MAAMC,EAAc,CAAC,EAQrB,OAPKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMVI,CAAM,EAEfE,SAAWH,IAtCII,WACnB,IACE,MAAM,KAAEC,SAAgB3B,EAAQsB,GAE1BM,EAAc,CAClBV,KAAMS,EAAKE,KAAKX,KAChBY,MAAOH,EAAKG,MACZC,YAAY,GAGd5B,GAAS6B,EAAAA,EAAAA,GAAeJ,GAC1B,CAAE,MAAOK,GACPC,EAAAA,GAAMD,MAAM,sCACd,GA0BME,CAAab,EAAO,EACpBd,SAED4B,IAAA,IAAC,OACAd,EAAM,aACNe,EAAY,WACZC,EAAU,aACVH,GAEDC,EAAA,OACC/B,EAAAA,EAAAA,MAAA,QAAMoB,SAAUU,EAAa3B,SAAA,EAC3BC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACR5B,QAAQ,WACR6B,WAAS,EACTC,OAAO,SACPC,MAAM,OACNC,KAAK,OACLzB,KAAK,OACL0B,SAAUP,EACVQ,OAAQP,EACRQ,MAAOxB,EAAOJ,KACdH,MAAM,aAGRN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACR5B,QAAQ,WACR6B,WAAS,EACTC,OAAO,SACPC,MAAM,QACNC,KAAK,QACLzB,KAAK,QACL0B,SAAUP,EACVQ,OAAQP,EACRQ,MAAOxB,EAAOH,MACdJ,MAAM,aAGRN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACR5B,QAAQ,WACR6B,WAAS,EACTC,OAAO,SACPC,MAAM,WACNC,KAAK,WACLzB,KAAK,WACL0B,SAAUP,EACVQ,OAAQP,EACRQ,MAAOxB,EAAOF,SACdL,MAAM,aAERN,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CACFO,GAAI,CACFkC,QAAS,OACTC,eAAgB,WAChBlC,UAAW,QACXN,UAEFC,EAAAA,EAAAA,KAACwC,EAAAA,EAAa,CACZtC,QAAQ,YACRgC,KAAK,SACL5B,MAAM,UACNmC,QAASjD,EACTkD,gBAAgB,MAChBC,SAAS3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,IAAI7C,SACvB,iBAIE,MAGP,C,qBCzHN8C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,MACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0CACD,QACJN,EAAQ,EAAUG,C","sources":["pages/RegisterPages/RegisterPages.tsx","../node_modules/@mui/icons-material/Send.js"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\";\nimport { Box, TextField, Typography } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { Formik } from \"formik\";\nimport React from \"react\";\nimport { useAddUserMutation } from \"../../redux/api\";\nimport { setCredentials } from \"../../redux/authSlice\";\nimport { useDispatch } from \"react-redux\";\nimport toast from \"react-hot-toast\";\n\nconst RegisterPages = () => {\n  const [addUser, { isLoading }] = useAddUserMutation();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values: any) => {\n    try {\n      const { data } = (await addUser(values)) as any;\n\n      const credentials = {\n        name: data.user.name,\n        token: data.token,\n        isLoggedIn: true,\n      };\n\n      dispatch(setCredentials(credentials));\n    } catch (error) {\n      toast.error(\"The email or password is incorrect!\");\n    }\n  };\n\n  return (\n    <Box m={1}>\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        sx={{ marginTop: \"16px\", color: \"green\" }}\n      >\n        Register\n      </Typography>\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\n        validate={(values) => {\n          const errors: any = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        }}\n        onSubmit={(values) => {\n          handleSubmit(values);\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n              color=\"success\"\n            />\n\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              color=\"success\"\n            />\n\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              color=\"success\"\n            />\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginTop: \"16px\",\n              }}\n            >\n              <LoadingButton\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"success\"\n                loading={isLoading}\n                loadingPosition=\"end\"\n                endIcon={<SendIcon />}\n              >\n                Register\n              </LoadingButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default RegisterPages;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;"],"names":["RegisterPages","addUser","isLoading","useAddUserMutation","dispatch","useDispatch","_jsxs","Box","m","children","_jsx","Typography","variant","component","sx","marginTop","color","Formik","initialValues","name","email","password","validate","values","errors","test","onSubmit","async","data","credentials","user","token","isLoggedIn","setCredentials","error","toast","handleSubmit","_ref","handleChange","handleBlur","TextField","fullWidth","margin","label","type","onChange","onBlur","value","display","justifyContent","LoadingButton","loading","loadingPosition","endIcon","SendIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}